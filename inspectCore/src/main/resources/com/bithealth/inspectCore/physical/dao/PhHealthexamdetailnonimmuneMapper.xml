<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bithealth.inspectCore.physical.dao.PhHealthexamdetailnonimmuneMapper" >
    <resultMap id="BaseResultMap" type="com.bithealth.inspectCore.physical.model.PhHealthexamdetailnonimmune" >
        <id column="LogID" property="logID" jdbcType="BIGINT" />
        <result column="HExamID" property="HExamID" jdbcType="BIGINT" />
        <result column="VaccinateName" property="vaccinateName" jdbcType="VARCHAR" />
        <result column="VaccinateDate" property="vaccinateDate" jdbcType="TIMESTAMP" />
        <result column="Institution" property="institution" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        LogID, HExamID, VaccinateName, VaccinateDate, Institution
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bithealth.inspectCore.physical.model.PhHealthexamdetailnonimmuneExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from ph_healthexamdetailnonimmune
        <if test="_parameter != null and _parameter != '' ">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.bithealth.inspectCore.physical.model.PhHealthexamdetailnonimmuneExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from ph_healthexamdetailnonimmune
        <if test="_parameter != null and _parameter != '' ">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select 
        <include refid="Base_Column_List" />
        from ph_healthexamdetailnonimmune
        where LogID = #{logID,jdbcType=BIGINT}
    </select>

    <insert id="insert" parameterType="com.bithealth.inspectCore.physical.model.PhHealthexamdetailnonimmune" >
        insert into ph_healthexamdetailnonimmune (LogID, HExamID, VaccinateName, 
            VaccinateDate, Institution)
        values (#{logID,jdbcType=BIGINT}, #{HExamID,jdbcType=INTEGER}, #{vaccinateName,jdbcType=VARCHAR}, 
            #{vaccinateDate,jdbcType=TIMESTAMP}, #{institution,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.bithealth.inspectCore.physical.model.PhHealthexamdetailnonimmune" >
        insert into ph_healthexamdetailnonimmune
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="logID != null" >
                LogID,
            </if>
            <if test="HExamID != null" >
                HExamID,
            </if>
            <if test="vaccinateName != null" >
                VaccinateName,
            </if>
            <if test="vaccinateDate != null" >
                VaccinateDate,
            </if>
            <if test="institution != null" >
                Institution,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="logID != null" >
                #{logID,jdbcType=BIGINT},
            </if>
            <if test="HExamID != null" >
                #{HExamID,jdbcType=INTEGER},
            </if>
            <if test="vaccinateName != null" >
                #{vaccinateName,jdbcType=VARCHAR},
            </if>
            <if test="vaccinateDate != null" >
                #{vaccinateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="institution != null" >
                #{institution,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.bithealth.inspectCore.physical.model.PhHealthexamdetailnonimmuneExample" resultType="java.lang.Integer" >
        select count(*) from ph_healthexamdetailnonimmune
        <if test="_parameter != null and _parameter != '' ">
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
    	<if test="_parameter != null and _parameter != '' ">
        update ph_healthexamdetailnonimmune
        <set >
            <if test="record.logID != null" >
                LogID = #{record.logID,jdbcType=BIGINT},
            </if>
            <if test="record.HExamID != null" >
                HExamID = #{record.HExamID,jdbcType=INTEGER},
            </if>
            <if test="record.vaccinateName != null" >
                VaccinateName = #{record.vaccinateName,jdbcType=VARCHAR},
            </if>
            <if test="record.vaccinateDate != null" >
                VaccinateDate = #{record.vaccinateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.institution != null" >
                Institution = #{record.institution,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null and _parameter != '' ">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
    	<if test="_parameter != null and _parameter != '' ">
        update ph_healthexamdetailnonimmune
        set LogID = #{record.logID,jdbcType=BIGINT},
            HExamID = #{record.HExamID,jdbcType=INTEGER},
            VaccinateName = #{record.vaccinateName,jdbcType=VARCHAR},
            VaccinateDate = #{record.vaccinateDate,jdbcType=TIMESTAMP},
            Institution = #{record.institution,jdbcType=VARCHAR}
        <if test="_parameter != null and _parameter != '' ">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.bithealth.inspectCore.physical.model.PhHealthexamdetailnonimmune" >
        update ph_healthexamdetailnonimmune
        <set >
            <if test="HExamID != null" >
                HExamID = #{HExamID,jdbcType=INTEGER},
            </if>
            <if test="vaccinateName != null" >
                VaccinateName = #{vaccinateName,jdbcType=VARCHAR},
            </if>
            <if test="vaccinateDate != null" >
                VaccinateDate = #{vaccinateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="institution != null" >
                Institution = #{institution,jdbcType=VARCHAR},
            </if>
        </set>
        where LogID = #{logID,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.bithealth.inspectCore.physical.model.PhHealthexamdetailnonimmune" >
        update ph_healthexamdetailnonimmune
        set HExamID = #{HExamID,jdbcType=INTEGER},
            VaccinateName = #{vaccinateName,jdbcType=VARCHAR},
            VaccinateDate = #{vaccinateDate,jdbcType=TIMESTAMP},
            Institution = #{institution,jdbcType=VARCHAR}
        where LogID = #{logID,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from ph_healthexamdetailnonimmune
        where LogID = #{logID,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="com.bithealth.inspectCore.physical.model.PhHealthexamdetailnonimmuneExample" >
    	<if test="_parameter != null and _parameter != '' ">
        delete from ph_healthexamdetailnonimmune
        <if test="_parameter != null and _parameter != '' ">
            <include refid="Example_Where_Clause" />
        </if>
        </if>
    </delete>

</mapper>