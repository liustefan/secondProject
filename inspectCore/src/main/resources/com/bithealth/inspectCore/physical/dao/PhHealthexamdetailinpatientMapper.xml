<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bithealth.inspectCore.physical.dao.PhHealthexamdetailinpatientMapper" >
    <resultMap id="BaseResultMap" type="com.bithealth.inspectCore.physical.model.PhHealthexamdetailinpatient" >
        <id column="LogID" property="logID" jdbcType="BIGINT" />
        <result column="HExamID" property="HExamID" jdbcType="BIGINT" />
        <result column="StartDate" property="startDate" jdbcType="TIMESTAMP" />
        <result column="EndTime" property="endTime" jdbcType="TIMESTAMP" />
        <result column="Resson" property="resson" jdbcType="VARCHAR" />
        <result column="Institution" property="institution" jdbcType="VARCHAR" />
        <result column="PatientID" property="patientID" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        LogID, HExamID, StartDate, EndTime, Resson, Institution, PatientID
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bithealth.inspectCore.physical.model.PhHealthexamdetailinpatientExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from ph_healthexamdetailinpatient
        <if test="_parameter != null and _parameter != '' ">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.bithealth.inspectCore.physical.model.PhHealthexamdetailinpatientExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from ph_healthexamdetailinpatient
        <if test="_parameter != null and _parameter != '' ">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select 
        <include refid="Base_Column_List" />
        from ph_healthexamdetailinpatient
        where LogID = #{logID,jdbcType=BIGINT}
    </select>

    <insert id="insert" parameterType="com.bithealth.inspectCore.physical.model.PhHealthexamdetailinpatient" >
        insert into ph_healthexamdetailinpatient (LogID, HExamID, StartDate, 
            EndTime, Resson, Institution, 
            PatientID)
        values (#{logID,jdbcType=BIGINT}, #{HExamID,jdbcType=INTEGER}, #{startDate,jdbcType=TIMESTAMP}, 
            #{endTime,jdbcType=TIMESTAMP}, #{resson,jdbcType=VARCHAR}, #{institution,jdbcType=VARCHAR}, 
            #{patientID,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.bithealth.inspectCore.physical.model.PhHealthexamdetailinpatient" >
        insert into ph_healthexamdetailinpatient
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="logID != null" >
                LogID,
            </if>
            <if test="HExamID != null" >
                HExamID,
            </if>
            <if test="startDate != null" >
                StartDate,
            </if>
            <if test="endTime != null" >
                EndTime,
            </if>
            <if test="resson != null" >
                Resson,
            </if>
            <if test="institution != null" >
                Institution,
            </if>
            <if test="patientID != null" >
                PatientID,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="logID != null" >
                #{logID,jdbcType=BIGINT},
            </if>
            <if test="HExamID != null" >
                #{HExamID,jdbcType=INTEGER},
            </if>
            <if test="startDate != null" >
                #{startDate,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null" >
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="resson != null" >
                #{resson,jdbcType=VARCHAR},
            </if>
            <if test="institution != null" >
                #{institution,jdbcType=VARCHAR},
            </if>
            <if test="patientID != null" >
                #{patientID,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.bithealth.inspectCore.physical.model.PhHealthexamdetailinpatientExample" resultType="java.lang.Integer" >
        select count(*) from ph_healthexamdetailinpatient
        <if test="_parameter != null and _parameter != '' ">
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
    	<if test="_parameter != null and _parameter != '' ">
        update ph_healthexamdetailinpatient
        <set >
            <if test="record.logID != null" >
                LogID = #{record.logID,jdbcType=BIGINT},
            </if>
            <if test="record.HExamID != null" >
                HExamID = #{record.HExamID,jdbcType=INTEGER},
            </if>
            <if test="record.startDate != null" >
                StartDate = #{record.startDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.endTime != null" >
                EndTime = #{record.endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.resson != null" >
                Resson = #{record.resson,jdbcType=VARCHAR},
            </if>
            <if test="record.institution != null" >
                Institution = #{record.institution,jdbcType=VARCHAR},
            </if>
            <if test="record.patientID != null" >
                PatientID = #{record.patientID,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null and _parameter != '' ">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
    	<if test="_parameter != null and _parameter != '' ">
        update ph_healthexamdetailinpatient
        set LogID = #{record.logID,jdbcType=BIGINT},
            HExamID = #{record.HExamID,jdbcType=INTEGER},
            StartDate = #{record.startDate,jdbcType=TIMESTAMP},
            EndTime = #{record.endTime,jdbcType=TIMESTAMP},
            Resson = #{record.resson,jdbcType=VARCHAR},
            Institution = #{record.institution,jdbcType=VARCHAR},
            PatientID = #{record.patientID,jdbcType=VARCHAR}
        <if test="_parameter != null and _parameter != '' ">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.bithealth.inspectCore.physical.model.PhHealthexamdetailinpatient" >
        update ph_healthexamdetailinpatient
        <set >
            <if test="HExamID != null" >
                HExamID = #{HExamID,jdbcType=INTEGER},
            </if>
            <if test="startDate != null" >
                StartDate = #{startDate,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null" >
                EndTime = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="resson != null" >
                Resson = #{resson,jdbcType=VARCHAR},
            </if>
            <if test="institution != null" >
                Institution = #{institution,jdbcType=VARCHAR},
            </if>
            <if test="patientID != null" >
                PatientID = #{patientID,jdbcType=VARCHAR},
            </if>
        </set>
        where LogID = #{logID,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.bithealth.inspectCore.physical.model.PhHealthexamdetailinpatient" >
        update ph_healthexamdetailinpatient
        set HExamID = #{HExamID,jdbcType=INTEGER},
            StartDate = #{startDate,jdbcType=TIMESTAMP},
            EndTime = #{endTime,jdbcType=TIMESTAMP},
            Resson = #{resson,jdbcType=VARCHAR},
            Institution = #{institution,jdbcType=VARCHAR},
            PatientID = #{patientID,jdbcType=VARCHAR}
        where LogID = #{logID,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from ph_healthexamdetailinpatient
        where LogID = #{logID,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="com.bithealth.inspectCore.physical.model.PhHealthexamdetailinpatientExample" >
    	<if test="_parameter != null and _parameter != '' ">
        delete from ph_healthexamdetailinpatient
        <if test="_parameter != null and _parameter != '' ">
            <include refid="Example_Where_Clause" />
        </if>
        </if>
    </delete>

</mapper>