<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bithealth.ucCore.uc.dao.MemberAccountMapper" >
    <resultMap id="BaseResultMap" type="com.bithealth.ucCore.uc.model.MemberAccount" >
        <id column="LogID" property="logID" jdbcType="INTEGER" />
        <result column="MemberID" property="memberID" jdbcType="CHAR" />
        <result column="Account" property="account" jdbcType="VARCHAR" />
        <result column="AccountType" property="accountType" jdbcType="TINYINT" />
        <result column="serverId" property="serverId" jdbcType="INTEGER" />
        <result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
        <result column="UpdateTime" property="updateTime" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        LogID, MemberID, Account, AccountType, serverId, CreateTime, UpdateTime
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bithealth.ucCore.uc.model.MemberAccountExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from memberunifiedlogin
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.bithealth.ucCore.uc.model.MemberAccountExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from memberunifiedlogin
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from memberunifiedlogin
        where LogID = #{logID,jdbcType=INTEGER}
    </select>

    <insert id="insertSelective" parameterType="com.bithealth.ucCore.uc.model.MemberAccount" >
        insert into memberunifiedlogin
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="logID != null" >
                LogID,
            </if>
            <if test="memberID != null" >
                MemberID,
            </if>
            <if test="account != null" >
                Account,
            </if>
            <if test="accountType != null" >
                AccountType,
            </if>
            <if test="serverId != null" >
                serverId,
            </if>
            <if test="createTime != null" >
                CreateTime,
            </if>
            <if test="updateTime != null" >
                UpdateTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="logID != null" >
                #{logID,jdbcType=INTEGER},
            </if>
            <if test="memberID != null" >
                #{memberID,jdbcType=CHAR},
            </if>
            <if test="account != null" >
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="accountType != null" >
                #{accountType,jdbcType=TINYINT},
            </if>
            <if test="serverId != null" >
                #{serverId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.bithealth.ucCore.uc.model.MemberAccountExample" resultType="java.lang.Integer" >
        select count(*) from memberunifiedlogin
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        <if test="_parameter != null" >
            update memberunifiedlogin
            <set >
                <if test="record.logID != null" >
                    LogID = #{record.logID,jdbcType=INTEGER},
                </if>
                <if test="record.memberID != null" >
                    MemberID = #{record.memberID,jdbcType=CHAR},
                </if>
                <if test="record.account != null" >
                    Account = #{record.account,jdbcType=VARCHAR},
                </if>
                <if test="record.accountType != null" >
                    AccountType = #{record.accountType,jdbcType=TINYINT},
                </if>
                <if test="record.serverId != null" >
                    serverId = #{record.serverId,jdbcType=INTEGER},
                </if>
                <if test="record.createTime != null" >
                    CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="record.updateTime != null" >
                    UpdateTime = #{record.updateTime,jdbcType=TIMESTAMP},
                </if>
            </set>
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        <if test="_parameter != null" >
            update memberunifiedlogin
            set LogID = #{record.logID,jdbcType=INTEGER},
                MemberID = #{record.memberID,jdbcType=CHAR},
                Account = #{record.account,jdbcType=VARCHAR},
                AccountType = #{record.accountType,jdbcType=TINYINT},
                serverId = #{record.serverId,jdbcType=INTEGER},
                CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
                UpdateTime = #{record.updateTime,jdbcType=TIMESTAMP}
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.bithealth.ucCore.uc.model.MemberAccount" >
        update memberunifiedlogin
        <set >
            <if test="memberID != null" >
                MemberID = #{memberID,jdbcType=CHAR},
            </if>
            <if test="account != null" >
                Account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="accountType != null" >
                AccountType = #{accountType,jdbcType=TINYINT},
            </if>
            <if test="serverId != null" >
                serverId = #{serverId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                CreateTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where LogID = #{logID,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.bithealth.ucCore.uc.model.MemberAccount" >
        update memberunifiedlogin
        set MemberID = #{memberID,jdbcType=CHAR},
            Account = #{account,jdbcType=VARCHAR},
            AccountType = #{accountType,jdbcType=TINYINT},
            serverId = #{serverId,jdbcType=INTEGER},
            CreateTime = #{createTime,jdbcType=TIMESTAMP},
            UpdateTime = #{updateTime,jdbcType=TIMESTAMP}
        where LogID = #{logID,jdbcType=INTEGER}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from memberunifiedlogin
        where LogID = #{logID,jdbcType=INTEGER}
    </delete>

    <delete id="deleteByExample" parameterType="com.bithealth.ucCore.uc.model.MemberAccountExample" >
        <if test="_parameter != null" >
            delete from memberunifiedlogin
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    
    <!-- ################# -->
    <insert id="insertBatch" parameterType="java.util.List">
    INSERT INTO memberunifiedlogin (MemberID, Account, AccountType, serverId, CreateTime, UpdateTime) VALUES
    <foreach collection="list" separator="," item="item">
    (#{item.memberID,jdbcType=VARCHAR}, #{item.account,jdbcType=VARCHAR},#{item.accountType,jdbcType=TINYINT},#{item.serverId,jdbcType=INTEGER},NOW(), NOW())
    </foreach>
    </insert>

</mapper>