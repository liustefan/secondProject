<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bithealth.taskMgrCore.dao.MemberMergeMapper" >
    <resultMap id="BaseResultMap" type="com.bithealth.taskMgrCore.model.MemberMerge" >
        <id column="LogID" property="logID" jdbcType="BIGINT" />
        <result column="ModuleType" property="moduleType" jdbcType="TINYINT" />
        <result column="SourceServiceID" property="sourceServiceID" jdbcType="INTEGER" />
        <result column="SourceMemberGUID" property="sourceMemberID" jdbcType="CHAR" />
        <result column="TargetServiceID" property="targetServiceID" jdbcType="INTEGER" />
        <result column="TargetMemberGUID" property="targetMemberID" jdbcType="CHAR" />
        <result column="SyncStatus" property="syncStatus" jdbcType="TINYINT" />
        <result column="SyncSTime" property="syncSTime" jdbcType="TIMESTAMP" />
        <result column="SyncETime" property="syncETime" jdbcType="TIMESTAMP" />
        <result column="FailReason" property="failReason" jdbcType="VARCHAR" />
        <result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
        <result column="UpdateTime" property="updateTime" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        LogID, ModuleType, SourceServiceID, SourceMemberGUID, TargetServiceID, TargetMemberGUID, 
        SyncStatus, SyncSTime, SyncETime, FailReason, CreateTime, UpdateTime
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bithealth.taskMgrCore.model.MemberMergeExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from tb_log_synchronization
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.bithealth.taskMgrCore.model.MemberMergeExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from tb_log_synchronization
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select 
        <include refid="Base_Column_List" />
        from tb_log_synchronization
        where LogID = #{logID,jdbcType=BIGINT}
    </select>

    <insert id="insertSelective" parameterType="com.bithealth.taskMgrCore.model.MemberMerge" >
        insert into tb_log_synchronization
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="logID != null" >
                LogID,
            </if>
            <if test="moduleType != null" >
                ModuleType,
            </if>
            <if test="sourceServiceID != null" >
                SourceServiceID,
            </if>
            <if test="sourceMemberID != null" >
                SourceMemberGUID,
            </if>
            <if test="targetServiceID != null" >
                TargetServiceID,
            </if>
            <if test="targetMemberID != null" >
                TargetMemberGUID,
            </if>
            <if test="syncStatus != null" >
                SyncStatus,
            </if>
            <if test="syncSTime != null" >
                SyncSTime,
            </if>
            <if test="syncETime != null" >
                SyncETime,
            </if>
            <if test="failReason != null" >
                FailReason,
            </if>
            <if test="createTime != null" >
                CreateTime,
            </if>
            <if test="updateTime != null" >
                UpdateTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="logID != null" >
                #{logID,jdbcType=BIGINT},
            </if>
            <if test="moduleType != null" >
                #{moduleType,jdbcType=TINYINT},
            </if>
            <if test="sourceServiceID != null" >
                #{sourceServiceID,jdbcType=INTEGER},
            </if>
            <if test="sourceMemberID != null" >
                #{sourceMemberID,jdbcType=CHAR},
            </if>
            <if test="targetServiceID != null" >
                #{targetServiceID,jdbcType=INTEGER},
            </if>
            <if test="targetMemberID != null" >
                #{targetMemberID,jdbcType=CHAR},
            </if>
            <if test="syncStatus != null" >
                #{syncStatus,jdbcType=TINYINT},
            </if>
            <if test="syncSTime != null" >
                #{syncSTime,jdbcType=TIMESTAMP},
            </if>
            <if test="syncETime != null" >
                #{syncETime,jdbcType=TIMESTAMP},
            </if>
            <if test="failReason != null" >
                #{failReason,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.bithealth.taskMgrCore.model.MemberMergeExample" resultType="java.lang.Integer" >
        select count(*) from tb_log_synchronization
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        <if test="_parameter != null" >
            update tb_log_synchronization
            <set >
                <if test="record.logID != null" >
                    LogID = #{record.logID,jdbcType=BIGINT},
                </if>
                <if test="record.moduleType != null" >
                    ModuleType = #{record.moduleType,jdbcType=TINYINT},
                </if>
                <if test="record.sourceServiceID != null" >
                    SourceServiceID = #{record.sourceServiceID,jdbcType=INTEGER},
                </if>
                <if test="record.sourceMemberID != null" >
                    SourceMemberGUID = #{record.sourceMemberID,jdbcType=CHAR},
                </if>
                <if test="record.targetServiceID != null" >
                    TargetServiceID = #{record.targetServiceID,jdbcType=INTEGER},
                </if>
                <if test="record.targetMemberID != null" >
                    TargetMemberGUID = #{record.targetMemberID,jdbcType=CHAR},
                </if>
                <if test="record.syncStatus != null" >
                    SyncStatus = #{record.syncStatus,jdbcType=TINYINT},
                </if>
                <if test="record.syncSTime != null" >
                    SyncSTime = #{record.syncSTime,jdbcType=TIMESTAMP},
                </if>
                <if test="record.syncETime != null" >
                    SyncETime = #{record.syncETime,jdbcType=TIMESTAMP},
                </if>
                <if test="record.failReason != null" >
                    FailReason = #{record.failReason,jdbcType=VARCHAR},
                </if>
                <if test="record.createTime != null" >
                    CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="record.updateTime != null" >
                    UpdateTime = #{record.updateTime,jdbcType=TIMESTAMP},
                </if>
            </set>
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        <if test="_parameter != null" >
            update tb_log_synchronization
            set LogID = #{record.logID,jdbcType=BIGINT},
                ModuleType = #{record.moduleType,jdbcType=TINYINT},
                SourceServiceID = #{record.sourceServiceID,jdbcType=INTEGER},
                SourceMemberGUID = #{record.sourceMemberID,jdbcType=CHAR},
                TargetServiceID = #{record.targetServiceID,jdbcType=INTEGER},
                TargetMemberGUID = #{record.targetMemberID,jdbcType=CHAR},
                SyncStatus = #{record.syncStatus,jdbcType=TINYINT},
                SyncSTime = #{record.syncSTime,jdbcType=TIMESTAMP},
                SyncETime = #{record.syncETime,jdbcType=TIMESTAMP},
                FailReason = #{record.failReason,jdbcType=VARCHAR},
                CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
                UpdateTime = #{record.updateTime,jdbcType=TIMESTAMP}
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.bithealth.taskMgrCore.model.MemberMerge" >
        update tb_log_synchronization
        <set >
            <if test="moduleType != null" >
                ModuleType = #{moduleType,jdbcType=TINYINT},
            </if>
            <if test="sourceServiceID != null" >
                SourceServiceID = #{sourceServiceID,jdbcType=INTEGER},
            </if>
            <if test="sourceMemberID != null" >
                SourceMemberGUID = #{sourceMemberID,jdbcType=CHAR},
            </if>
            <if test="targetServiceID != null" >
                TargetServiceID = #{targetServiceID,jdbcType=INTEGER},
            </if>
            <if test="targetMemberID != null" >
                TargetMemberGUID = #{targetMemberID,jdbcType=CHAR},
            </if>
            <if test="syncStatus != null" >
                SyncStatus = #{syncStatus,jdbcType=TINYINT},
            </if>
            <if test="syncSTime != null" >
                SyncSTime = #{syncSTime,jdbcType=TIMESTAMP},
            </if>
            <if test="syncETime != null" >
                SyncETime = #{syncETime,jdbcType=TIMESTAMP},
            </if>
            <if test="failReason != null" >
                FailReason = #{failReason,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                CreateTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where LogID = #{logID,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.bithealth.taskMgrCore.model.MemberMerge" >
        update tb_log_synchronization
        set ModuleType = #{moduleType,jdbcType=TINYINT},
            SourceServiceID = #{sourceServiceID,jdbcType=INTEGER},
            SourceMemberGUID = #{sourceMemberID,jdbcType=CHAR},
            TargetServiceID = #{targetServiceID,jdbcType=INTEGER},
            TargetMemberGUID = #{targetMemberID,jdbcType=CHAR},
            SyncStatus = #{syncStatus,jdbcType=TINYINT},
            SyncSTime = #{syncSTime,jdbcType=TIMESTAMP},
            SyncETime = #{syncETime,jdbcType=TIMESTAMP},
            FailReason = #{failReason,jdbcType=VARCHAR},
            CreateTime = #{createTime,jdbcType=TIMESTAMP},
            UpdateTime = #{updateTime,jdbcType=TIMESTAMP}
        where LogID = #{logID,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from tb_log_synchronization
        where LogID = #{logID,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="com.bithealth.taskMgrCore.model.MemberMergeExample" >
        <if test="_parameter != null" >
            delete from tb_log_synchronization
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

</mapper>